# SOCA - Compute Node Bootstrap
# Configure Compute node

- hosts: localhost
  gather_facts: no
  vars:
    SOCA_CONFIGURATION: "{{ lookup('env','SOCA_CONFIGURATION') }}"

  tasks:
    - name: Create /etc/selinux/config
      template:
        src: ../templates/etc/selinux/config.j2
        dest: /etc/selinux/config
        mode: 600
        backup: true

    - name: Create /etc/ssh/ssh_config
      template:
        src: ../templates/etc/ssh/ssh_config.j2
        dest: /etc/ssh/ssh_config
        mode: 644
        backup: true

    - name: Create /etc/security/limits.conf
      template:
        src: ../templates/etc/security/limits.conf.j2
        dest: /etc/security/limits.conf
        mode: 644
        backup: true

    - name: Disable firewalld if applicable
      systemd:
        name: firewalld
        disabled: yes

    - name: Add custom SOCA path to $PATH
      lineinfile:
        path: /etc/environment
        line: "export PATH='/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/pbs/bin:/opt/pbs/sbin:/opt/pbs/bin:/apps/soca/{{ SOCA_CONFIGURATION }}/python/latest/bin'"
        create: yes

    - name: Install SSM (use shell vs yum as yum is not working with python3)
      shell: |
        yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
      args:
        executable: /bin/bash

    - name: Disable firewalld if applicable
      systemd:
        name: amazon-ssm-agent
        enabled: yes

    - name: Detect instance type family
      shell: curl --silent  http://169.254.169.254/latest/meta-data/instance-type | cut -d. -f1
      register: instance_type_family

    - name: Disable Nouveau GPU drivers if applicable (create /etc/modprobe.d/blacklist.conf)
      template:
        - src: ../templates/etc/modprobe.d/blacklist.conf.j2
        - dest: /etc/modprobe.d/blacklist.conf
      when: instance_type_family == "g2" or instance_type_family == "g3"

    - name: Backlist Nouveau driver when applicable
      lineinfile:
        path: /etc/environment
        line: 'GRUB_CMDLINE_LINUX="rdblacklist=nouveau" >> /etc/default/grub'
        create: yes
      when: instance_type_family == "g2" or instance_type_family == "g3"

    - name: Rebuild grub2 if needed
      shell: grub2-mkconfig -o /boot/grub2/grub.cfg
      when: instance_type_family == "g2" or instance_type_family == "g3"