AWSTemplateFormatVersion: 2010-09-09
Description: (SO0072) - Solution for Scale-Out Computing on AWS. Template version 1
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
            default: Install Location
        Parameters:
          - S3InstallBucket
          - S3InstallFolder

      - Label:
          default: Linux Distribution
        Parameters:
          - BaseOS
          - CustomAMI
          - SchedulerInstanceType
      -
        Label:
          default: Network and Security
        Parameters:
          - VpcCidr
          - ClientIp
          - SSHKeyPair
      - Label:
          default: Default LDAP user
        Parameters:
          - UserName
          - UserPassword

    ParameterLabels:
      VpcCidr:
        default: Choose your VPC Cidr
      ClientIp:
        default: What's your IP?
      CustomAMI:
        default: (Optional) Have your own AMI?
      SSHKeyPair:
        default: What's your SSH keypair?
      BaseOS:
        default: Linux Distro
      S3InstallBucket:
        default: S3 bucket with your SOCA installer
      S3InstallFolder:
        default: S3 folder where you uploaded the SOCA files
      SchedulerInstanceType:
        default: Instance type for your master host
      UserName:
        default: Username for your default LDAP user
      UserPassword:
        default: Password for your default LDAP user

Parameters:
  CustomAMI:
    Type: String
    Description: If you use your own AMI, you still have to specify the base os (see above)

  SchedulerInstanceType:
    Default: m5.large
    Type: String
    Description: Choose the type of instance to use for the scheduler

  BaseOS:
    Type: String
    "AllowedValues": [
      "Centos7",
      "Rhel7",
      "AmazonLinux2",
    ]
    "Default": "AmazonLinux2"
    "Description": IMPORTANT CENTOS USERS > You MUST subscribe to https://aws.amazon.com/marketplace/pp/B00O7WM7QW first if using CentOS


  VpcCidr:
    Type: String
    Default: 110.0.0.0/16
    Description: Choose the Cidr (/16) block you want to use for your VPC (eg 110.0.0.0/16)
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/16'
    ConstraintDescription: Your VPC must use x.x.x./16 CIDR range

  ClientIp:
    Type: String
    Default: "205.251.233.0/24"
    Description: Default IP(s) allowed to directly SSH into the scheduler. Keep it restrictive !
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: ClientIP must be a valid IP or network range of the form x.x.x.x/x

  SSHKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Default SSH pem keys used to SSH into the scheduler

  S3InstallBucket:
    Type: String
    Default: %%BUCKET_NAME%%
    Description: Name of your S3 Bucket where you uploaded your install files
    AllowedPattern: '(?=^.{3,63}$)(?!^(\\d+\\.)+\\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$)'
    ConstraintDescription: You must specify the bucket NAME only (no s3:// or https://bucket.s3.amazonaws.com)

  S3InstallFolder:
    Type: String
    Default: %%SOLUTION_NAME%%/%%VERSION%%
    Description: Name of the S3 folder where you uploaded SOCA

  UserName:
    Type: String

  UserPassword:
    NoEcho: true
    Type: String
    MinLength: 5
    MaxLength: 50
    AllowedPattern: '^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};:]*$'
    Description: "5 characters minimum. Special chars authorized: (!@#$%^&*()_+\-=\[\]{};:)"

Conditions:
  UseCustomAMI: !Not [!Equals [!Ref CustomAMI, ""]]

Mappings:
  Info:
    Data:
      ClusterIdPrefix: soca
      Version: 1.0.0
    User:
      Centos7: centos
      AmazonLinux2: ec2-user
      Rhel7: ec2-user


  RegionMap:
    ap-east-1: # Hong Kong
      Rhel7: ami-1a453e6b
      Centos7: ami-68e59c19
      AmazonLinux2: ami-570c7726
    ap-northeast-1: # Tokyo
      Rhel7: ami-00b95502a4d51a07e
      Centos7: ami-045f38c93733dd48d
      AmazonLinux2: ami-0c3fd0f5d33134a76
    ap-northeast-2: # Seoul
      Rhel7: ami-041b16ca28f036753
      Centos7: ami-06cf2a72dadf92410
      AmazonLinux2: ami-095ca789e0549777d
    ap-south-1: # Mumbai
      Rhel7: ami-0963937a03c01ecd4
      Centos7: ami-02e60be79e78fef21
      AmazonLinux2: ami-0d2692b6acea72ee6
    ap-southeast-1: # Singapore
      Rhel7: ami-055c55112e25b1f1f
      Centos7: ami-0b4dd9d65556cac22
      AmazonLinux2: ami-01f7527546b557442
    ap-southeast-2: # Sydney
      Rhel7: ami-036b423b657376f5b
      Centos7: ami-08bd00d7713a39e7d
      AmazonLinux2: ami-0dc96254d5535925f
    ca-central-1: # Canada
      Rhel7: ami-06ca3c0058d0275b3
      Centos7: ami-033e6106180a626d0
      AmazonLinux2: ami-0d4ae09ec9361d8ac
    eu-central-1: # Frankfurt
      Rhel7: ami-09de4a4c670389e4b
      Centos7: ami-04cf43aca3e6f3de3
      AmazonLinux2: ami-0cc293023f983ed53
    eu-north-1: # Stockholm
      Rhel7: ami-66f67f18
      Centos7: ami-5ee66f20
      AmazonLinux2: ami-3f36be41
    eu-west-1: # Dublin
      Rhel7: ami-0202869bdd0fc8c75
      Centos7: ami-0ff760d16d9497662
      AmazonLinux2: ami-0bbc25e23a7640b9b
    eu-west-2: # London
      Rhel7: ami-0188c0c5eddd2d032
      Centos7: ami-0eab3a90fc693af19
      AmazonLinux2: ami-0d8e27447ec2c8410
    eu-west-3: # Paris
      Rhel7: ami-0c4224e392ec4e440
      Centos7: ami-0e1ab783dc9489f34
      AmazonLinux2: ami-0adcddd3324248c4c
    me-south-1: # Bahrain
      Rhel7: AMI_NOT_ADDED_YET # /todo Update AMI ID when available
      Centos7: ami-08529c51dbe004acb
      AmazonLinux2: ami-0624cbc1598d12691
    us-east-1: # Virginia
      Rhel7: ami-000db10762d0c4c05
      Centos7: ami-02eac2c0129f6376b
      AmazonLinux2: ami-0b898040803850657
    us-east-2: # Ohio
      Rhel7: ami-094720ddca649952f
      Centos7: ami-0f2b4fc905b0bd1f1
      AmazonLinux2: ami-0d8f6eb4f641ef691
    us-west-1: # Northern California
      Rhel7: ami-04642fc8fca1e8e67
      Centos7: ami-074e2d6769f445be5
      AmazonLinux2: ami-056ee704806822732
    us-west-2: # Oregon
      Rhel7: ami-036affea69a1101c9
      Centos7: ami-01ed306a12b7d1c96
      AmazonLinux2: ami-082b5a644766e0e6f
    sa-east-1: # Sao Paulo
      Rhel7: ami-05c1c16cac05a7c0b
      Centos7: ami-0b8d86d4bf91850af
      AmazonLinux2: ami-058943e7d9b9cabfb

Resources:
  Network:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VpcCidr: !Ref VpcCidr
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
      TimeoutInMinutes: 30
      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Network.template"] ]

  Security:
    DependsOn: Network
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VpcId: !GetAtt Network.Outputs.VpcId
        ClientIp: !Ref ClientIp
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
        S3InstallBucket: !Ref S3InstallBucket
        S3InstallFolder: !Ref S3InstallFolder
      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Security.template"] ]
      TimeoutInMinutes: 30

  Storage:
    Type: AWS::CloudFormation::Stack
    DependsOn: Security
    Properties:
      Parameters:
        VpcId: !GetAtt Network.Outputs.VpcId
        SchedulerSecurityGroup: !GetAtt Security.Outputs.SchedulerSecurityGroup
        ComputeNodeSecurityGroup: !GetAtt Security.Outputs.ComputeNodeSecurityGroup
        PrivateSubnet1: !GetAtt Network.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt Network.Outputs.PrivateSubnet2
        PrivateSubnet3: !GetAtt Network.Outputs.PrivateSubnet3
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Storage.template"] ]
      TimeoutInMinutes: 30

  Scheduler:
    DependsOn: Storage
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SSHKeyPair: !Ref SSHKeyPair
        SchedulerInstanceType: !Ref SchedulerInstanceType
        SubnetId: !GetAtt Network.Outputs.PublicSubnet1
        SecurityGroupId: !GetAtt Security.Outputs.SchedulerSecurityGroup
        SchedulerIAMInstanceProfile: !GetAtt Security.Outputs.SchedulerIAMInstanceProfile
        S3InstallFolder: !Ref S3InstallFolder
        S3Bucket: !Ref S3InstallBucket
        Version: !FindInMap [ Info, Data, Version ]
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
        EFSDataDns: !GetAtt Storage.Outputs.EFSDataDns
        EFSAppsDns: !GetAtt Storage.Outputs.EFSAppsDns
        ImageId: !If [UseCustomAMI, !Ref CustomAMI, !FindInMap [RegionMap, !Ref "AWS::Region", !Ref BaseOS]]
        BaseOS: !Ref BaseOS
        UserName: !Ref UserName
        UserPassword: !Ref UserPassword
      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Scheduler.template"] ]
      TimeoutInMinutes: 60

  Analytics:
    DependsOn: Scheduler
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SchedulerSecurityGroup: !GetAtt Security.Outputs.SchedulerSecurityGroup
        PublicSubnet1: !GetAtt Network.Outputs.PublicSubnet1
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
        ClientIp: !Ref ClientIp
        SchedulerPublicIP: !GetAtt Scheduler.Outputs.SchedulerPublicIP
      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Analytics.template"] ]
      TimeoutInMinutes: 30

  Viewer:
    DependsOn: Analytics
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SchedulerSecurityGroup: !GetAtt Security.Outputs.SchedulerSecurityGroup
        PublicSubnet1: !GetAtt Network.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt Network.Outputs.PublicSubnet2
        PublicSubnet3: !GetAtt Network.Outputs.PublicSubnet3
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
        VpcId: !GetAtt Network.Outputs.VpcId
        SchedulerInstanceId: !GetAtt Scheduler.Outputs.SchedulerInstanceId
        SchedulerIAMRole: !GetAtt Security.Outputs.SchedulerIAMRole
      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Viewer.template"] ]
      TimeoutInMinutes: 30


  Configuration:
    DependsOn: Viewer
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SchedulerInstanceId: !GetAtt Scheduler.Outputs.SchedulerInstanceId
        SchedulerPrivateDnsName: !GetAtt Scheduler.Outputs.SchedulerPrivateDnsName
        SchedulerPrivateIP: !GetAtt Scheduler.Outputs.SchedulerPrivateIP
        SchedulerPublicIP: !GetAtt Scheduler.Outputs.SchedulerPublicIP
        SchedulerSecurityGroup: !GetAtt Security.Outputs.SchedulerSecurityGroup
        ComputeNodeIAMRoleArn: !GetAtt Security.Outputs.ComputeNodeIAMRoleArn
        ComputeNodeIAMRole: !GetAtt Security.Outputs.ComputeNodeIAMRole
        ComputeNodeInstanceProfile: !GetAtt Security.Outputs.ComputeNodeInstanceProfile
        SchedulerIAMRoleArn: !GetAtt Security.Outputs.SchedulerIAMRoleArn
        SchedulerIAMRole: !GetAtt Security.Outputs.SchedulerIAMRole
        ComputeNodeSecurityGroup: !GetAtt Security.Outputs.ComputeNodeSecurityGroup
        VpcId: !GetAtt Network.Outputs.VpcId
        PublicSubnet1: !GetAtt Network.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt Network.Outputs.PublicSubnet2
        PublicSubnet3: !GetAtt Network.Outputs.PublicSubnet3
        PrivateSubnet1: !GetAtt Network.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt Network.Outputs.PrivateSubnet2
        PrivateSubnet3: !GetAtt Network.Outputs.PrivateSubnet3
        EFSDataDns: !GetAtt Storage.Outputs.EFSDataDns
        EFSAppsDns: !GetAtt Storage.Outputs.EFSAppsDns
        S3InstallFolder: !Ref S3InstallFolder
        Version: !FindInMap [ Info, Data, Version ]
        S3Bucket: !Ref S3InstallBucket
        ClusterId: !Join [ "-", [ !FindInMap [ Info, Data, ClusterIdPrefix ], !Ref "AWS::StackName"] ]
        SSHKeyPair: !Ref SSHKeyPair
        ImageId: !If [UseCustomAMI, !Ref CustomAMI, !FindInMap [RegionMap, !Ref "AWS::Region", !Ref BaseOS]]
        ESDomainEndpoint: !GetAtt Analytics.Outputs.ESDomainEndpoint
        LoadBalancerDNSName: !GetAtt Viewer.Outputs.LoadBalancerDNSName
        LoadBalancerArn: !GetAtt Viewer.Outputs.LoadBalancerArn
        BaseOS: !Ref BaseOS

      TemplateURL: !Join [ "/", [!Sub "https://s3.${AWS::URLSuffix}", !Ref S3InstallBucket, !Ref S3InstallFolder, "templates/Configuration.template"] ]
      TimeoutInMinutes: 60

Outputs:
  SchedulerPublicIP:
    Value: !GetAtt Scheduler.Outputs.SchedulerPublicIP
  LDAPMasterUsername:
    Value: admin
  LDAPMasterPassword:
    Value: /root/OpenLdapAdminPassword.txt
  AnalyticsDashboard:
    Value: !Join [ "", [ "https://", !GetAtt Analytics.Outputs.ESDomainEndpoint, "/_plugin/kibana/"]]
  ConnectionString:
    Value: !Join [ "", [ "ssh -i ", !Ref SSHKeyPair, " ", !FindInMap [ Info, User, !Ref BaseOS ], "@", !GetAtt Scheduler.Outputs.SchedulerPublicIP]]
  WebUserInterface:
    Value: !Join [ "", [ "https://", !GetAtt Viewer.Outputs.LoadBalancerDNSName]]
  BaseOS:
    Value: !Ref BaseOS
  BaseAMI:
    Value: !If [UseCustomAMI, !Ref CustomAMI, !FindInMap [RegionMap, !Ref "AWS::Region", !Ref BaseOS]]
  Version:
    Value: !FindInMap [ Info, Data, Version ]